{"ast":null,"code":"/**\r\n * src/hooks/useEquipmentData.js\r\n * \r\n * This custom hook fetches and processes equipment data from a CSV file.\r\n * It returns the data grouped by category and a loading state.\r\n */import{useEffect,useState}from\"react\";import Papa from\"papaparse\";import rawCsv from\"../data/equipment.csv?raw\";export function useEquipmentData(){const[data,setData]=useState({});const[loading,setLoading]=useState(true);useEffect(()=>{Papa.parse(rawCsv,{header:true,complete:results=>{const grouped={};results.data.forEach(item=>{var _item$category;const cat=(_item$category=item.category)===null||_item$category===void 0?void 0:_item$category.trim();if(!cat)return;if(!grouped[cat])grouped[cat]=[];grouped[cat].push({manufacturer:item.manufacturer,model:item.model,quantity:item.quantity});});setData(grouped);setLoading(false);}});},[]);return{data,loading};}","map":{"version":3,"names":["useEffect","useState","Papa","rawCsv","useEquipmentData","data","setData","loading","setLoading","parse","header","complete","results","grouped","forEach","item","_item$category","cat","category","trim","push","manufacturer","model","quantity"],"sources":["C:/Users/fy298/GitHub/marumo-sound/src/hooks/useEquipmentData.js"],"sourcesContent":["/**\r\n * src/hooks/useEquipmentData.js\r\n * \r\n * This custom hook fetches and processes equipment data from a CSV file.\r\n * It returns the data grouped by category and a loading state.\r\n */\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport rawCsv from \"../data/equipment.csv?raw\";\r\n\r\nexport function useEquipmentData() {\r\n  const [data, setData] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    Papa.parse(rawCsv, {\r\n      header: true,\r\n      complete: (results) => {\r\n        const grouped = {};\r\n        results.data.forEach(item => {\r\n          const cat = item.category?.trim();\r\n          if (!cat) return;\r\n          if (!grouped[cat]) grouped[cat] = [];\r\n          grouped[cat].push({\r\n            manufacturer: item.manufacturer,\r\n            model: item.model,\r\n            quantity: item.quantity,\r\n          });\r\n        });\r\n        setData(grouped);\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return { data, loading };\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GAEA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,IAAI,KAAM,WAAW,CAC5B,MAAO,CAAAC,MAAM,KAAM,2BAA2B,CAE9C,MAAO,SAAS,CAAAC,gBAAgBA,CAAA,CAAG,CACjC,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC,CACpC,KAAM,CAACM,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACdE,IAAI,CAACO,KAAK,CAACN,MAAM,CAAE,CACjBO,MAAM,CAAE,IAAI,CACZC,QAAQ,CAAGC,OAAO,EAAK,CACrB,KAAM,CAAAC,OAAO,CAAG,CAAC,CAAC,CAClBD,OAAO,CAACP,IAAI,CAACS,OAAO,CAACC,IAAI,EAAI,KAAAC,cAAA,CAC3B,KAAM,CAAAC,GAAG,EAAAD,cAAA,CAAGD,IAAI,CAACG,QAAQ,UAAAF,cAAA,iBAAbA,cAAA,CAAeG,IAAI,CAAC,CAAC,CACjC,GAAI,CAACF,GAAG,CAAE,OACV,GAAI,CAACJ,OAAO,CAACI,GAAG,CAAC,CAAEJ,OAAO,CAACI,GAAG,CAAC,CAAG,EAAE,CACpCJ,OAAO,CAACI,GAAG,CAAC,CAACG,IAAI,CAAC,CAChBC,YAAY,CAAEN,IAAI,CAACM,YAAY,CAC/BC,KAAK,CAAEP,IAAI,CAACO,KAAK,CACjBC,QAAQ,CAAER,IAAI,CAACQ,QACjB,CAAC,CAAC,CACJ,CAAC,CAAC,CACFjB,OAAO,CAACO,OAAO,CAAC,CAChBL,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAEH,IAAI,CAAEE,OAAQ,CAAC,CAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}